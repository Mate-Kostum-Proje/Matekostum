// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7139),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7154),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7158),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7161),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7172),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 673, DateTimeKind.Local).AddTicks(7176),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "e2b4a391-300a-4007-836a-a089f4643b93",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(3637),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "faad7bbe-51e3-40b3-b89e-32f433d7f6dc",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(3654),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "312351fb-b598-4d11-8c2e-f7d8020f4204",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(3659),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "d16adadc-dd82-4bb4-882d-eb0c8a0aae8d",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(3663),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "a92264af-9198-4d5d-a55d-5dd1418dc3bb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2560),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "dc66e16d-c830-4784-88fe-1cf8cca58c60",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2579),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8f76b7d7-18af-4ff6-95c8-13c341912978",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2585),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5ce23cf7-a6bb-42a5-80b6-739b26fc0aee",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2590),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b444ffea-9a9b-43fc-8f6b-36fe52b69902",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2605),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d24cad18-83f9-4294-a541-f1a15afd0a8e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2619),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "468ecd73-a1e1-4ba5-9c83-df483fe916c3",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2624),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "379717d5-e7fb-4e90-82e7-e6e363341680",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2675),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0bc9fee5-43a4-4be5-9507-72f255415c66",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2681),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "af8a1faa-4664-4117-a774-41e6c02a7c93",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2688),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e86db530-ac7b-4e63-9ff5-13e7d6b07aec",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2693),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b6f67586-3c9b-4d31-9bc0-3db797858174",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2698),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "eb324383-fa54-4f78-8c3b-5b9beb08df7f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2704),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b38cded1-deb6-4000-aec5-c25806e24143",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2711),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c6483eeb-2916-4292-81af-96ca7d7e3694",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2716),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9a220289-6da1-4688-8166-cd6a417d05d3",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2721),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "990815af-e318-4d9c-8ea7-6ffa231f4908",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2726),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "87df88a4-0841-4fa4-9914-c616e3a3853c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2731),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a1cbb507-dc32-4d23-9188-b61ca6657bf6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2736),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d8a5ebd9-a1dc-437b-a1da-89d989644426",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2741),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d60cabaf-2b96-4c0f-befd-22f85209c4ad",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2746),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3410fa66-ce6c-4653-9d43-0bfc9f0126c6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2753),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "20626b29-37f8-4f35-8f17-83205d42baaa",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2759),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9158d85a-1475-4694-8143-750f749440ef",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2765),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fdb8b882-02ae-4198-b761-63bd06c024c2",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2769),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BORDO",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "99b2a5a6-6eda-4e8d-b00e-c28a4bfa0b85",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2780),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "14935d1a-463c-4909-a05c-0588d583274b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2785),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "233cbec4-710a-40ee-9d1c-88bd25bfbfbd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2790),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "09c8da03-b3bb-43fd-a794-866597ddeeda",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2795),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ff849228-a57c-4613-8f32-b459c4392041",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2802),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "92f42bfd-54d7-4488-8781-c332a9939c99",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2807),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "07b5cbb6-a8aa-4799-a998-2c9d429e611c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2812),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK KIRMIZI",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "64cc418d-e754-47d2-a593-671b2f1a110c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2817),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "dd9a0e5b-164d-4ea8-8527-6b9f061bec6e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2822),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "2f6b2146-660d-4bba-9ddc-f1a0d6edbe72",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2827),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "dec8acff-778d-46b4-a7f4-cb384c58a219",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2833),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5d4ad7e8-41df-4074-8f30-5f7774057f61",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2837),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "90aee0b6-b934-4ffc-8ea1-096bc9b38ba9",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2844),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f8764619-c26d-4c08-a719-943cd27ced52",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2850),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9bcac092-5b77-45c6-afbf-554621040dd2",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2855),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0d9e5682-0ea5-43d5-a039-e9c4d7a86e15",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2859),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "71d96ddc-8cc6-4fc5-a206-52339f4da7fb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2864),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d9058b9a-00e4-41ef-8e55-35c67c5dbb9e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2868),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "1boş",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "1e426275-e15f-4f17-b2e2-eb0ec44b2270",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2873),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "5266982f-a9b7-4c02-bd61-f6d0edb25946",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2877),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "7fd8b36e-ab94-4ffc-8a4d-8d2e679e5417",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2884),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "46334fc7-4964-48b2-ac7b-d5cd09aede9d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2889),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "acc753a4-9ddd-4ae2-9dbb-47491fc6e72e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2898),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "ad64b506-6fba-43fe-a770-9c6303cf1c1b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2903),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "571f30cc-a526-4961-a917-8e5907a87ffa",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(2907),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "AŞUK MAŞUK",
                            ProductRegionId = "AKDENİZ",
                            Size = 14,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(6070),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(6089),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(6100),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(6104),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 675, DateTimeKind.Local).AddTicks(6108),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5427),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5446),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5452),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5460),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5465),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5471),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5475),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5479),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(5484),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7957),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7974),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7983),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7988),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7992),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(7997),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8001),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8005),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8015),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8020),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8026),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8030),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8034),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8038),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8042),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8046),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8050),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8055),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8061),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8065),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 676, DateTimeKind.Local).AddTicks(8069),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 677, DateTimeKind.Local).AddTicks(470),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 677, DateTimeKind.Local).AddTicks(488),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM3")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM1")
                        .IsUnique();

                    b.HasIndex("GSM2")
                        .IsUnique();

                    b.HasIndex("GSM3")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "085c1f0f-f921-4c04-bec3-0fcce58dd20c",
                            Address = "İkitelli Organize Sanayi Bölgesi Giyim Sanatkarları İş ve Ticaret Merkezi (Deposite A.V.M.arkası) 4. Ada C Blok Kat:1 No:114\r\nBaşakşehir – İSTANBUL",
                            CreatedAt = new DateTime(2024, 12, 13, 13, 29, 36, 677, DateTimeKind.Local).AddTicks(5304),
                            Email = "matekostum@gmail.com",
                            GSM1 = "Kiralama WhatsApp İletişim Hattı \r\n\r\n 0530 909 11 34 – Erdem",
                            GSM2 = "İmalat \r\n\r\n 0532 321 64 97 – İsmail",
                            GSM3 = "0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            Transportation = "(Kirazlı-Metrokent hattı) İkitelli Sanayi Durağı",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\n  Cumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
