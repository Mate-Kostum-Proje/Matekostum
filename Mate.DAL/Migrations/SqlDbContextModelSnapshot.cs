// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7036),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7072),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7076),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7079),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7081),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 346, DateTimeKind.Local).AddTicks(7084),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "1bc7e5cd-26d5-4c93-a6ae-d4df879b90ba",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(3748),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "863fb516-f859-446d-a88c-f0581dc7d79d",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(3766),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "d5b5cf74-3230-4ee2-a380-ffdc25d709b2",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(3771),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "af293261-9b20-439d-b19d-057da64c4639",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(3780),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "84095e86-1265-42cd-8ea9-b314d8fb28cd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2630),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNADIYAMANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "2100a61f-ff55-4cd2-9d51-1d4c9ec042e0",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2651),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNANKARAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "308b01ba-a3c0-4f5c-b057-6303f1b0196e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2662),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİNÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "302ff986-c581-49cb-8e3d-aa25052dc98f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2669),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİN-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e778e29c-2542-4764-8348-a07e26fad73b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2674),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİLECİKÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fd9ec548-edc0-4d04-adbf-56234c2716d4",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2681),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "60d88e97-c65d-41b3-8d23-3d363bc951a2",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2687),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1f743518-04cc-4ecc-b110-f3e679a44408",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2774),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a49e8a05-230d-4acc-9339-3c6343270a83",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2779),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-SADEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "31d2a508-bba0-445c-a155-ffee37269cb9",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2786),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNDİYARBAKIRÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1d586bc4-f1d1-4d92-9001-8f5431cc0f3a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2794),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNELAZIĞÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c87cb4a0-2aa4-4f21-94a9-ec2cd5728b13",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2799),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0126b076-7c63-4d17-8c34-f526d128f4e4",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2812),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e4692bbf-7c97-4bcd-9fa5-630e441125d2",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2816),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a57a9fa5-37f1-4f33-b7a7-f30b1cf1f98e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2821),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-SİYAHÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8b47b45e-3093-4540-8869-f2c777a84683",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2826),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKARADENİZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "61ba1654-0b9c-42d0-9392-cb6f9563b622",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2830),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "6fb1bb2c-357b-4877-b75e-4790ac6428c4",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2836),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "6ac6f20a-a68f-49f3-b374-76baefc8d463",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2843),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNSİLİFKEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "467e1918-7f06-428a-9f74-e4f23adf3d91",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2848),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d73d28e4-e038-479f-8501-5cee8f4499c0",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2853),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-YEŞİLÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9146fada-301d-429c-879b-d4b0e6e7066f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2858),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c374267e-bdbb-41b6-819a-9635bd8bcf37",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2863),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "141ec255-9b4a-4c06-8ce0-3008fcd0c399",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2868),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNÜSKÜPÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ÜSKÜP",
                            ProductRegionId = "TRAKYA",
                            ProductSubRegionId = "ÜSKÜP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "26d63e4d-6ea7-4439-b9ad-edd7e784f50a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2872),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "38fcc66e-0076-4a9e-b17b-439f716c397c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2877),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-BEYAZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BEYAZ",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "75402948-27fa-4d13-ac8b-b4130310dd21",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2884),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNVANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f1228a75-250d-4ba9-a906-6add87cef18c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2888),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-BORDOÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5439eaff-7bb1-44ea-acc9-2ed04e50945d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2893),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "721c4062-43d9-4d39-85f7-6f0119e1558f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2898),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fd21e70a-db7f-4bf4-8d89-968e47b7e207",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2903),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "71db168a-2c5b-4bda-85c7-d62f960f1e0c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2908),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b092d75c-8739-42b6-bc71-61802c03d6e8",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2912),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c5480631-56d2-4645-a062-331814ca436b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2923),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "788489cf-6df7-40fa-b876-ef539538dade",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2929),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "6ab4c655-77dc-4b3d-82d3-67d96fb6e40a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2933),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b1d34a68-59d7-467e-9829-4ce22aa98c07",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2938),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ac4d428b-b873-4f72-9cac-c3cecf94bcaa",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2942),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b8053909-bcab-471d-a4ab-48efc03cc62f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2947),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "955ac722-3362-416c-9e83-9e3ddb080080",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2952),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d6124c5f-06d1-40f6-8e1f-09325b4de549",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2957),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fe0ab5ef-89fd-410b-beec-f8008a99e582",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2961),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "1boş",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "96aaab6c-9913-45e8-a779-be7fc0e9f7cd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2967),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d9659c1b-1953-4316-9d2d-647e4a3c7e11",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2973),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "71776438-d1ae-442e-a4b8-ca475b980657",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2978),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "29dccf20-080b-4e8a-943e-9a008a95544d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2982),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e81542f3-2584-4e73-90a3-e3f32606fdc5",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2986),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "ec0f1112-6ee2-47b2-aaac-adef43fd43f3",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2990),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "a6cf0ca7-4384-40f3-9b0e-4ce86a4847d5",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(2995),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "AŞUK MAŞUK",
                            ProductRegionId = "AKDENİZ",
                            Size = 14,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(6080),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(6099),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(6104),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(6108),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 348, DateTimeKind.Local).AddTicks(6111),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5311),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5335),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5340),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5344),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5355),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5361),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5365),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5370),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(5374),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7850),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7870),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7875),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7879),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7885),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7890),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7894),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7898),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7904),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7909),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7913),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7917),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7920),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7924),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7928),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7932),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7937),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7949),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7954),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7958),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 349, DateTimeKind.Local).AddTicks(7961),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 350, DateTimeKind.Local).AddTicks(273),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 350, DateTimeKind.Local).AddTicks(293),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM3")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM1")
                        .IsUnique();

                    b.HasIndex("GSM2")
                        .IsUnique();

                    b.HasIndex("GSM3")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "850f6f2d-8cce-4ea6-b119-bc64f01f7749",
                            Address = "İkitelli Organize Sanayi Bölgesi Giyim Sanatkarları İş ve Ticaret Merkezi (Deposite A.V.M.arkası) 4. Ada C Blok Kat:1 No:114\r\nBaşakşehir – İSTANBUL",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 11, 7, 350, DateTimeKind.Local).AddTicks(4889),
                            Email = "matekostum@gmail.com",
                            GSM1 = "Kiralama WhatsApp İletişim Hattı \r\n\r\n 0530 909 11 34 – Erdem",
                            GSM2 = "İmalat \r\n\r\n 0532 321 64 97 – İsmail",
                            GSM3 = "0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            Transportation = "(Kirazlı-Metrokent hattı) İkitelli Sanayi Durağı",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\n  Cumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = "5f2bfee4-6132-40b8-bbc2-7cc3271211c9",
                            Address = " uxi sokak. Lola Apt. Paksim Caddesi, No:11",
                            City = "İstanbul",
                            District = "Maltepe",
                            Email = "idilerdogan@sabanciuniv.edu",
                            GSM = "05391111111",
                            Name = "İdil",
                            Password = "qweasd",
                            SurName = "Erdoğan",
                            TcNo = "12212212211"
                        });
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
