// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5006),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5023),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5027),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5031),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5034),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 614, DateTimeKind.Local).AddTicks(5037),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "316fe61a-df9a-4f9a-a1cf-d38bddc7d1e0",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(1445),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "adc9819e-2652-4a24-9571-48cdc482cb0e",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(1463),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "5561f7d6-dc4f-4285-becb-51eeb11fde36",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(1468),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "32cde440-d0ca-4f43-8b49-866a466b74b6",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(1472),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "cbc91ef5-9188-42bf-8186-366568541ffb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(381),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNADIYAMANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a1cf300a-3019-4d68-a4fe-4bbcad18764e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(410),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNANKARAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4f213486-0bd1-42ae-aedc-03b8ee298b8b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(417),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİNÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ae295f6f-0a5e-47fb-82db-6784ab564848",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(422),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİN-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0f8b324d-c6d5-49fb-b005-a69166df6491",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(428),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİLECİKÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a64fdae0-b70c-4b7b-810a-ec99c649f680",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(435),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "af9a33bd-bca8-4048-935b-da2b94f41fed",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(441),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c176b7c1-3f7d-49d0-a0c5-9ed3f8ff82bb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(451),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a8508f78-c901-4f1a-b960-f5e81b70c2dd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(456),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-SADEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "014cf3e3-93ac-41d6-aa40-c12f64eec162",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(508),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNDİYARBAKIRÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "94abe53c-8f96-48c1-a8f1-24a126d0299a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(514),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNELAZIĞÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a964986c-3b3e-46b0-a715-da99556c106d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(519),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ffcf7de3-e281-4003-bb40-e8f50cb69e3c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(524),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "7df65846-34ec-4143-ab2d-e84a0e223c9f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(529),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a95709ea-68db-411f-9e27-b26441776e7f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(536),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-SİYAHÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "aeef3e31-4aa8-4b4f-bdd0-fc86e3f666dc",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(543),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKARADENİZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a2827556-7da4-4c6e-80e2-5cf0655ff717",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(548),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3d832da9-ee02-4dd4-a630-cc5f7ce7cb0e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(553),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "77ff1cb8-926c-46a0-8ef9-02fc297321fb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(558),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNSİLİFKEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fc89e941-131c-454d-976f-e6ce635e78f6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(565),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "38499c62-1bf7-45d1-8453-e816a22cd45d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(570),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-YEŞİLÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "03e6fcbf-b143-4a3b-956d-28927f114941",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(575),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d4769ddf-836f-4929-9d17-98e7e756f5f6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(585),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4b32ae03-66c8-4a17-84e4-0e6ea0c40809",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(594),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNÜSKÜPÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ÜSKÜP",
                            ProductRegionId = "TRAKYA",
                            ProductSubRegionId = "ÜSKÜP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "86c4c189-cb16-4e36-87f3-505b43e72840",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(599),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "59553183-1666-4e7b-bf35-422225fb53d7",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(604),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-BEYAZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BEYAZ",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3512cb86-830d-432e-b012-7ee311a4a9fb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(608),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNVANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d92b4bfe-425d-4976-a77c-37e97f2e7eeb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(614),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-BORDOÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "63f704c9-42eb-43ee-92bf-439ea803f148",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(619),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1d945b74-879b-4b08-b743-131e095afe21",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(624),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5dd0bc8f-b2e7-4b85-8a5f-e03e5db426cb",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(629),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9f850632-b8f1-4a31-aa41-b2030f29b836",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(636),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b15dd258-5047-4733-9a96-08611b7d0a01",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(641),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c9a2deb1-21b9-4101-b6ae-c9241b374fee",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(646),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "7cc5d7ff-44c9-4a36-8f3a-82734f9db93d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(651),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "143e20b8-c942-4367-961e-b970befb3ba0",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(655),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "cbd82e72-0d51-481c-8b04-cb3cc0cfa78a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(659),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ae2437a0-82fe-48dd-8e82-a479818cc7d1",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(664),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ab769758-876e-44f1-83e6-6c492d2a7f0f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(668),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "01b3099f-bc4c-4f37-a3d0-7f7c5968794b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(675),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "05e9caf5-4d7d-4587-b8c2-f0f6ffe51a3e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(681),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fd02b09f-f8ab-4bbc-89cd-f3ea12de26c3",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(686),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "1boş",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a8eb5703-0262-4a4a-9c3c-00dcc314384f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(692),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "36a1e643-0a12-4d4d-9ae2-9f3243f47186",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(701),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8bc64e90-debb-4663-b171-4e7b59adb35f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(705),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "931b724b-0a31-4fa0-806f-c0288f3049d7",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(709),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d3b94882-13bf-4f41-8c40-489bd2b77309",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(714),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE SARI",
                            Size = 8,
                            UnitPriceForRent = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(3813),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(3833),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(3838),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(3843),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 616, DateTimeKind.Local).AddTicks(3852),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3027),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3048),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3053),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3057),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3062),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3068),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3072),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3076),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(3081),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5378),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5397),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5402),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5406),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5410),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5416),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5420),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5429),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5441),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5446),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5451),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5455),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5459),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5463),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5467),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5472),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5476),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5481),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5485),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5489),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(5493),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(8168),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 617, DateTimeKind.Local).AddTicks(8188),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM3")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM1")
                        .IsUnique();

                    b.HasIndex("GSM2")
                        .IsUnique();

                    b.HasIndex("GSM3")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "12dcb913-4e77-4ac7-badd-a263e760e759",
                            Address = "İkitelli Organize Sanayi Bölgesi Giyim Sanatkarları İş ve Ticaret Merkezi (Deposite A.V.M.arkası) 4. Ada C Blok Kat:1 No:114\r\nBaşakşehir – İSTANBUL",
                            CreatedAt = new DateTime(2024, 12, 14, 23, 58, 15, 618, DateTimeKind.Local).AddTicks(3778),
                            Email = "matekostum@gmail.com",
                            GSM1 = "Kiralama WhatsApp İletişim Hattı \r\n\r\n 0530 909 11 34 – Erdem",
                            GSM2 = "İmalat \r\n\r\n 0532 321 64 97 – İsmail",
                            GSM3 = "0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            Transportation = "(Kirazlı-Metrokent hattı) İkitelli Sanayi Durağı",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\n  Cumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = "3ca4936f-74f4-44ed-9620-4daaeb4d8048",
                            Address = " uxi sokak. Lola Apt. Paksim Caddesi, No:11",
                            City = "İstanbul",
                            District = "Maltepe",
                            Email = "idilerdogan@sabanciuniv.edu",
                            GSM = "05391111111",
                            Name = "İdil",
                            Password = "qweasd",
                            SurName = "Erdoğan",
                            TcNo = "12212212211"
                        });
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
