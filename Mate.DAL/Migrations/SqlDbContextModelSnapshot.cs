// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(441),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(452),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(455),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(458),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(460),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 993, DateTimeKind.Local).AddTicks(470),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "b577c300-44a3-4b35-9cbb-0d9cd1531bf4",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(5896),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "a59c3c20-953a-413a-99a1-9e0b534697e3",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(5913),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "5c0fd4cf-6c91-4c0e-b2e8-7f9e20d45c83",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(5917),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "cecb216d-2870-455d-b028-0d9919e6352d",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(5921),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1d4ade84-4814-42ec-8344-3f703fd5aa05",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4449),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9645fe52-bd1d-4c7f-a6f2-5796cf555f7b",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4467),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "66156310-871d-490b-8e42-d82b4f7f7b90",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4473),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "697d0e99-ec1e-4545-8e3c-9b283b4b9b28",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4477),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5f465af2-364d-4d52-ae47-c2eff0c4acfa",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4481),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "23c7348b-e0f5-41e0-91a7-1c8519ddd2de",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4493),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b6a9115d-e69f-41e0-9d15-db267d1d4440",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4503),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "417976ca-f9a1-406c-85f2-fde2dc62023b",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4555),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8594e570-7f25-4cfb-a045-1bd58c1210cb",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4560),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "36322e37-fe7f-4f62-8e53-fb32c239b76b",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4566),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "833d7398-506c-4fea-b706-50c15c4bc7a5",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4570),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5fe2bd49-216b-44a8-9ac5-d549936a6bcb",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4575),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f493739f-076e-4812-8f71-24ece8b34bfd",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4579),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5c5effb7-162c-4cf1-a264-b7a0a1015c1f",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4584),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "93f537d3-0d42-466f-9e99-11e6b4a649e6",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4591),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "60679914-2ed1-4600-82cc-cdfa61699d71",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4595),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "679eae65-bd83-4102-9e63-3d7c7bd1af82",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4599),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d1e92419-8b61-4372-ab33-df62c9ff8c9a",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4604),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4329f676-91cb-45f3-92e4-83e645f287e4",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4609),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "beb30351-35e9-4961-9f3d-483c68e0cb82",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4613),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "84157f3c-a6af-406d-9bfd-707baa904409",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4617),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1e7f910a-e5a9-474c-80c6-9aa396daf47e",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4622),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "67d3587f-c20f-4203-93e3-5c1bd23ce26c",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4628),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "10df88a6-9fba-4c9f-a1c7-b15c5496697d",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4632),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a9e44f5f-c91d-4c83-b9fa-4f29fca84321",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4636),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BORDO",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "38ac4ed3-70e7-4d9a-a99f-499872668294",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4641),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "38dcb4e9-7dda-415b-9cbd-3b6b95a0df92",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4645),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1a0807aa-fa6e-45ec-91a1-04b1a2c132dc",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4653),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "ee4630af-f6ed-4571-b6a1-e644d62909e7",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4658),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "350ef8ec-1c38-41d9-a559-cbbf29be0a4d",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4662),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9ef74cf6-2130-4b0e-9613-7359318a424b",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4668),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "cbd0c9c6-8306-4a82-b10d-bd3876b07750",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4672),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK KIRMIZI",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1f061062-056c-4711-bc96-b01a6c3c3280",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4677),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0cb0eb95-89e9-4583-99c1-c9c64b71f76d",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4682),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d60f4b7f-2735-4052-9a3f-1fe359b427dc",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4686),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4f9f3268-581a-4674-bb53-44c8c6a0fa86",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4691),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d4e42609-8cc0-4386-b225-8425bf22a2d7",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4694),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d28e3f10-c06b-406a-a21b-cacb0edf2f92",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4699),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "38a2f730-4bbd-4e8a-aa79-dac1e89283e4",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4705),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "91c217b3-1146-4a78-a41c-04c1a3ad0564",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4710),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "83fa3ed4-75d5-4594-92b0-04dd3cd2e832",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4714),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "04d20f5f-6115-4a78-8a21-19e87a8ea2b9",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4718),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "33d3151b-7fbd-42bd-a128-b13bbc8adc7c",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4722),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "1boş",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "fc591b73-176c-4a90-a828-f0d1619bc336",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4726),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "af2d5053-a78f-4d5b-a829-fceff1fdcede",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4730),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "aaa94f8d-40f3-4735-bee4-cdb08c7781bb",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4734),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "777b9e26-3088-4271-9a78-b825bdfcb448",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4740),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "03904c37-ad39-4361-b76c-5e89dd415d85",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4744),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "bd5cbbcc-68e1-423e-89dc-e87829d9e076",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4748),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "6be64b7c-7b1a-405d-af30-66efac6513ac",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(4757),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "AŞUK MAŞUK",
                            ProductRegionId = "AKDENİZ",
                            Size = 14,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(8356),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(8373),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(8378),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(8387),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 994, DateTimeKind.Local).AddTicks(8391),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7006),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7023),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7027),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7032),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7040),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7045),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7049),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7053),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(7057),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9254),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9271),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9276),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9284),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9288),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9293),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9297),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9301),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9305),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9310),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9313),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9319),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9322),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9326),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9335),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9339),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9342),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9346),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9350),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9356),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 995, DateTimeKind.Local).AddTicks(9360),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 996, DateTimeKind.Local).AddTicks(1505),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 996, DateTimeKind.Local).AddTicks(1522),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM3")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM1")
                        .IsUnique();

                    b.HasIndex("GSM2")
                        .IsUnique();

                    b.HasIndex("GSM3")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "03d5160f-a374-44c6-99dc-d8d2264dae64",
                            Address = "İkitelli Organize Sanayi Bölgesi Giyim Sanatkarları İş ve Ticaret Merkezi (Deposite A.V.M.arkası) 4. Ada C Blok Kat:1 No:114\r\nBaşakşehir – İSTANBUL",
                            CreatedAt = new DateTime(2024, 12, 13, 3, 3, 1, 996, DateTimeKind.Local).AddTicks(5930),
                            Email = "matekostum@gmail.com",
                            GSM1 = "Kiralama WhatsApp İletişim Hattı \r\n\r\n 0530 909 11 34 – Erdem",
                            GSM2 = "İmalat \r\n\r\n 0532 321 64 97 – İsmail",
                            GSM3 = "0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            Transportation = "(Kirazlı-Metrokent hattı) İkitelli Sanayi Durağı",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\n  Cumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
