// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20241210145047_addedproduct")]
    partial class addedproduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5058),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5072),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5075),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5077),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5080),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 881, DateTimeKind.Local).AddTicks(5087),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "74d03569-2a84-4072-b3df-b42e42c2178a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(2210),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "9d7673d0-b858-417c-9e6b-b2440fc4039e",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(2226),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "24deb2ae-3741-4716-a672-ea00233f8fd8",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(2232),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "845d753a-67b6-4f43-a91b-28b5398abf3b",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(2237),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "48fb8d8c-3797-4179-be1b-99614e5daf0a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1105),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "98b048ba-ea90-4cf9-8a94-3dcf6e41d508",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1126),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9b1997c6-e49b-49ae-a754-bcd68725d9cf",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1132),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "923d56aa-fe39-4ba4-b341-81d5c4946c0e",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1136),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f3b0d5e2-80d7-48b7-93c3-148d59bc37d5",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1142),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3bdf4e34-7ec9-405b-82b4-340ffc0edb79",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1149),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e729f41b-7e55-4287-a82f-baf5b2a16c15",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1155),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "791583dc-72b0-4323-bfa3-6e862b4ff198",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1192),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "eba01a72-c89c-499d-bd65-9b6339df5653",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1197),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "969cecec-d368-4cfc-972b-b92a31c8e81e",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1204),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a0bd3512-8adc-4ee7-9afc-db65f9fd3772",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1209),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e834a373-6cc9-4d3c-8d55-cb69bfba5f7c",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1214),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f4b221c4-9169-4729-9697-8b435d72e026",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1229),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "873ec8ad-6b74-449b-9ede-2becc0fa2e33",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1234),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c3d53ae4-1ac7-456d-ac6e-14da623a65ac",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1239),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fccdee41-2dca-46d7-8dfe-4aeedaad769f",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1247),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f7495d59-4aae-40ff-afb3-4b23fa3bb5ac",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1251),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e547af44-7d1f-41ee-aad6-230c3b76e770",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1257),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            ProductSubRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "dc0df92f-1d8a-4a9a-bbff-251a26c54677",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1262),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            ProductSubRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "aea5ee5e-0c7d-4ea0-b50e-6a7fc8a36a4d",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1266),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4ff37020-0b94-4994-a43d-fdc27b37098a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1271),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "cc844487-0c7d-4f57-b0a9-9f5d1beced43",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1276),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "34a65b56-7b8a-4a66-adec-fa8fc6e2cd1c",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1281),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "996729b1-17d7-4087-8df3-928540ec8d74",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1288),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e829c3d2-4050-48fd-935e-1ea9c082ef94",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1292),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BORDO",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4f6f7e86-d2db-4bd4-8065-72ceb7de3b6a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1297),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f562f631-864a-4ea4-ab2e-83a38e4a4493",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1302),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "7c8b35cd-1512-4986-ae67-61ab8f61825a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1307),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4f569def-1b6c-4aff-9037-3a187434cf5b",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1312),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "6e77a795-b148-4c1e-9185-2ac9006736c7",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1317),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "39665ec2-5c6d-4173-a346-e7ea3123fb24",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1322),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5a94cfd1-9529-42bc-9214-58d16cdb0b38",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1329),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK KIRMIZI",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "4b3d6592-b89b-4671-9fa2-90b1f68fb45e",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1333),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1f5f20a5-a88b-4f81-a6bd-c21904103faf",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1344),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "1639776a-930d-4822-b6e2-d1f4c363671b",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1349),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "da54332f-c84d-4701-978d-2de209ce9036",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1353),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "2bf19871-bc73-4e1d-8475-c89281e90628",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1358),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "a3693444-1be6-4b05-bdbc-657b76fd3701",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1362),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0550120b-c459-4973-a9cb-3396b74e1984",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1367),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "70842d8b-dc9d-4e1d-a35b-f853f49aedf7",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1373),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9c49efa6-e739-41ec-a336-027cbfeecf28",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1378),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c9a6edd3-e283-47d0-9fcf-009c13e17747",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1383),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "c03cdd8f-a635-4e35-8338-80446352320c",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1388),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "",
                            ProductName = "SALSA",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "b42e0f99-8df7-49c0-b84b-ca1b9c22778a",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1393),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "f9675295-8162-4bd5-b77a-e8d128e82bb6",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1398),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "3a8ae450-27eb-4148-a5dd-311d37cba966",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1403),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "aab9692b-8cb5-4926-a920-b1d3c2721d2b",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1407),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "58dfd0bd-37fa-4663-a117-82e887be734d",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1414),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "4bfb9a1d-abf9-4f3c-afb7-1cb817bf7850",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1419),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            ProductRegionId = "",
                            Size = 8,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        },
                        new
                        {
                            Id = "5c5781cf-5ca5-4955-9093-10e1e9b40a85",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(1423),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "2halkoyun",
                            ProductName = "AŞUK MAŞUK",
                            ProductRegionId = "AKDENİZ",
                            Size = 14,
                            UnitPriceForRent = 0,
                            UnitPriceForSale = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(4309),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(4329),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(4333),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(4338),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 883, DateTimeKind.Local).AddTicks(4347),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3509),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3528),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3533),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3537),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3542),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3552),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3557),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3561),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(3566),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5498),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5518),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5523),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5527),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5535),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5542),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5547),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5551),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5555),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5559),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5564),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5568),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5574),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5578),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5582),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5586),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5590),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5595),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5599),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5603),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(5609),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(7511),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 884, DateTimeKind.Local).AddTicks(7529),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "a3647365-62b9-4231-b7c3-9c6dc4488659",
                            CreatedAt = new DateTime(2024, 12, 10, 17, 50, 46, 885, DateTimeKind.Local).AddTicks(672),
                            Email = "matekostum@gmail.com",
                            GSM = "Kiralama WhatsApp İletişim Hattı\r\n\r\n0530 909 11 34 – Erdem\r\n\r\nİmalat\r\n\r\n0532 321 64 97 – İsmail\r\n0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\nCumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
