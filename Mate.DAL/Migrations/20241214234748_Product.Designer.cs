// <auto-generated />
using System;
using Mate.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mate.DAL.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20241214234748_Product")]
    partial class Product
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("BasketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.CommUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CommUsers");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.FotoGalery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("FotoGaleries");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ParentMenuId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentMenuId1");

                    b.HasIndex("RolesId");

                    b.ToTable("MainMenu");

                    b.HasData(
                        new
                        {
                            Id = "Home",
                            ActionName = "Index",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2080),
                            CssName = "",
                            MenuName = "Home",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "About",
                            ActionName = "",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2116),
                            CssName = "",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductRent",
                            ActionName = "ProductRent",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2123),
                            CssName = "",
                            MenuName = "ProductRent",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "ProductSale",
                            ActionName = "ProductSale",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2129),
                            CssName = "",
                            MenuName = "ProductSale",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Galery",
                            ActionName = "Galery",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2135),
                            CssName = "",
                            MenuName = "Galery",
                            RoleId = 1
                        },
                        new
                        {
                            Id = "Comm",
                            ActionName = "Comm",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 57, DateTimeKind.Local).AddTicks(2157),
                            CssName = "",
                            MenuName = "Comm",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SituationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SituationName");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductSize")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPiceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .IsRequired()
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersDetail");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("OrdersSituation");

                    b.HasData(
                        new
                        {
                            Id = "42c70e5a-583b-4fb9-a743-49f4b1946347",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 60, DateTimeKind.Local).AddTicks(9696),
                            Situation = "Siparişiniz Alındı"
                        },
                        new
                        {
                            Id = "c1c26e7d-041b-4d3a-b173-58292611cdb7",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 60, DateTimeKind.Local).AddTicks(9743),
                            Situation = "Siparişiniz Hazırlanıyor"
                        },
                        new
                        {
                            Id = "bd078fa4-8b30-473b-97e2-c4d8c3f038be",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 60, DateTimeKind.Local).AddTicks(9756),
                            Situation = "Siparişiniz Kargoya verildi"
                        },
                        new
                        {
                            Id = "c63345af-2198-4559-ae84-c152bf0c9135",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 60, DateTimeKind.Local).AddTicks(9766),
                            Situation = "Siparişiniz Tamamlandı"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdult")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSubRegionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceForRent")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<int?>("UnitPriceForSale")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductRegionId");

                    b.HasIndex("ProductSubRegionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "d6ff5c0f-3e4d-4739-af4f-933ed15ca771",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8038),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNADIYAMANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ADIYAMAN",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "ADIYAMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "bbe2e785-7cce-48c6-9bf5-b57dca465414",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8082),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNANKARAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ANKARA",
                            ProductRegionId = "İÇ ANADOLU",
                            ProductSubRegionId = "ANKARA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e4a600f8-5395-4edf-ace5-70105ed8857c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8095),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİNÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "31d8d1b9-3f04-4536-ad3b-df1d208e0aed",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8107),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNARTVİN-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ARTVİN İŞLİ",
                            ProductRegionId = "KARADENİZ",
                            ProductSubRegionId = "ARTVİN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "b29afbb6-0932-4651-9f5e-7b1c9bfaa59e",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8119),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİLECİKÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİLECİK",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BİLECİK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "35712e67-29e2-41a5-9712-389a4cdd30a0",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8137),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS E",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "33986c63-8128-4baa-a6f4-90c4bf37f169",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8164),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBİTLİS-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BİTLİS K",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "BİTLİS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "93f40ea7-6592-439b-a35d-87387c72bd70",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8203),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU İŞLİ",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "357d6d00-f081-4e41-bb58-c438aa9000c0",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8218),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNBOLU-SADEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "BOLU SADE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "BOLU",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "af9c8092-2cc6-439d-bbb1-c524864dc46c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8430),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNDİYARBAKIRÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "DİYARBAKIR",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "DİYARBAKIR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "68c26d55-6951-44ed-a880-d98a1e8326fd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8445),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNELAZIĞÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ELAZIĞ",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "ELAZIĞ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3b9f729e-a5b5-4e21-bc82-53b3874f1f11",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8457),
                            Gender = true,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-KÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP K",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "833db7aa-4e11-48b3-a519-e3ddbc70e71c",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8470),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNGAZİANTEP-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "GAZİANTEP E",
                            ProductRegionId = "GÜNEYDOGU ANADOLU",
                            ProductSubRegionId = "GAZİANTEP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "11ad4bc6-5272-4832-be97-53fea3e4f593",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8481),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY KIRMIZI",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d1a14652-daaa-47ec-ab9f-c91bb880b0b9",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8499),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNHALAY-SİYAHÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "HALAY SİYAH",
                            ProductSubRegionId = "HALAY",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "85512266-b25f-4bd4-bc10-a1688c0d067a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8512),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKARADENİZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KARADENİZ",
                            ProductRegionId = "KARADENİZ",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "11793200-ac3d-42fe-a192-9ebcd03ad55d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8523),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-KIRMIZIÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS KIRMIZI",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "9506f1a1-53b0-4e63-8b64-42d466b6b6e6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8539),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNKAFKAS-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "KAFKAS MOR",
                            ProductRegionId = "KAFKAS",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "209f4633-a0b7-43ce-bd05-07575df07295",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8551),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNSİLİFKEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "SİLİFKE",
                            ProductRegionId = "MARMARA",
                            ProductSubRegionId = "SİLİFKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d0a4cfdc-7b12-4df8-a4c5-2ad8cade03df",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8565),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE E",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "dc4991d7-089f-455d-a378-3a4341a9603f",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8577),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-YEŞİLÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE YEŞİL",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "f2776492-49fb-427f-aba3-f56171da644b",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8589),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTEKE-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TEKE PEMBE",
                            ProductRegionId = "AKDENİZ",
                            ProductSubRegionId = "TEKE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "626e311e-f5b0-4052-893d-76ff40803b65",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8603),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYAÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "63a379b8-b0cd-46a4-8aed-4f4757efdddd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8616),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNÜSKÜPÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ÜSKÜP",
                            ProductRegionId = "TRAKYA",
                            ProductSubRegionId = "ÜSKÜP",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "e4c8e701-2912-4ed2-9e48-c46df784fd6d",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8627),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-PEMBEÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA PEMBE",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "5e7be220-4fe4-4de4-8c74-15e69938c1f3",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8639),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNTRAKYA-BEYAZÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "TRAKYA BEYAZ",
                            ProductRegionId = "TRAKYA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "cf32efb4-e780-432e-af33-741fea1b2a33",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8650),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNVANÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "VAN",
                            ProductRegionId = "DOGU ANADOLU",
                            ProductSubRegionId = "VAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "2fec1dd3-25c3-4ae8-8542-a180d2c759b9",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8662),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-BORDOÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK BORDO",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "778d8396-943d-4dfc-9fff-9f59bedd7938",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8686),
                            Gender = false,
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-EÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK E",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8ff0ed06-4af8-48cc-9b7c-07d7b6d2a5b6",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8698),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-İŞLİÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK İŞLİ",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "bc666324-61ff-4590-944a-59ff1b89b3ae",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8713),
                            IsAdult = false,
                            IsSale = false,
                            PhotoPath = "/databaseimg/HALKOYUNZEYBEK-MORÇOCUKKİRALIK.jpg",
                            ProductCategoryId = "2halkoyun",
                            ProductName = "ZEYBEK MOR",
                            ProductRegionId = "EGE",
                            ProductSubRegionId = "ZEYBEK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "181e368f-a48d-46d5-aebd-4d1dfb6ca7bc",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8725),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇAÇA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "446c1a8c-d596-4c80-948e-4b8078bbbbbd",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8735),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ÇİFTETELLİ PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "365551c6-bf94-45d3-bd64-ddbd09d84e12",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8750),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "FRAK",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "8330ce12-2350-4914-9676-78d46a963898",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8761),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "GREASE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "d4eabd08-556a-4394-b04e-9f7c522d50ae",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8771),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "HİNT",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "7dc05682-174c-4561-85f7-d0aec7b56c2a",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8782),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "İSPANYOL",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "193a8f2f-6408-4ed0-bc52-530c6ef94871",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8792),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN FUŞYA",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "2ab70a3b-c34a-413c-8cff-66f697b11507",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8805),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIRMIZI",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "03138c6e-1998-4755-aff5-717763ce8715",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8815),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN KIR(1)",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "3eef830d-3b4c-492c-a255-ceb4fa94befa",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8826),
                            IsAdult = false,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "ROMAN MOR",
                            ProductSubRegionId = "ROMAN",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "bef365f5-f910-4460-8df9-160dc5770606",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8837),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "1boş",
                            ProductName = "SALSA",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "6f98294c-b73b-4e39-ad75-2b2c4b22edd7",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8849),
                            Gender = false,
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "SALSA E",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "0f477679-2454-4702-835b-c536348174ab",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8859),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE KIRMIZI",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "fc5b6e86-e565-4d5d-b23e-7799fb71ac50",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8869),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE MOR",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "58e6bb30-b621-44bc-82b4-4fbe767c7d50",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8882),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE PEMBE",
                            Size = 8,
                            UnitPriceForRent = 1500
                        },
                        new
                        {
                            Id = "60a8e087-4283-4739-9eac-7592cca8d928",
                            Amount = 10,
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 62, DateTimeKind.Local).AddTicks(8897),
                            IsAdult = true,
                            IsSale = false,
                            ProductCategoryId = "4dans",
                            ProductName = "STİLİZE SARI",
                            Size = 8,
                            UnitPriceForRent = 1500
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1boş",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 61, DateTimeKind.Local).AddTicks(4277),
                            Name = " "
                        },
                        new
                        {
                            Id = "2halkoyun",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 61, DateTimeKind.Local).AddTicks(4309),
                            Name = "HALK OYUNLARI KIYAFETLERİ"
                        },
                        new
                        {
                            Id = "3kına",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 61, DateTimeKind.Local).AddTicks(4321),
                            Name = "BİNDALLI VE KINA"
                        },
                        new
                        {
                            Id = "4dans",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 61, DateTimeKind.Local).AddTicks(4355),
                            Name = "STİLİZE DANS"
                        },
                        new
                        {
                            Id = "5rond",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 61, DateTimeKind.Local).AddTicks(4380),
                            Name = "ROND TÖREN"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductRegions");

                    b.HasData(
                        new
                        {
                            Id = "AKDENİZ",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4163),
                            Name = "AKDENİZ"
                        },
                        new
                        {
                            Id = "EGE",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4197),
                            Name = "EGE"
                        },
                        new
                        {
                            Id = "DOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4209),
                            Name = "DOGU ANADOLU"
                        },
                        new
                        {
                            Id = "GÜNEYDOGU ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4221),
                            Name = "GÜNEYDOGU ANADOLU"
                        },
                        new
                        {
                            Id = "İÇ ANADOLU",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4231),
                            Name = "İÇ ANADOLU"
                        },
                        new
                        {
                            Id = "KAFKAS",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4245),
                            Name = "KAFKAS"
                        },
                        new
                        {
                            Id = "KARADENİZ",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4255),
                            Name = "KARADENİZ"
                        },
                        new
                        {
                            Id = "MARMARA",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4276),
                            Name = "MARMARA"
                        },
                        new
                        {
                            Id = "TRAKYA",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(4287),
                            Name = "TRAKYA"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductSubRegions");

                    b.HasData(
                        new
                        {
                            Id = "ADIYAMAN",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9297),
                            Name = "ADIYAMAN"
                        },
                        new
                        {
                            Id = "ANKARA",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9327),
                            Name = "ANKARA"
                        },
                        new
                        {
                            Id = "ARTVİN",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9339),
                            Name = "ARTVİN"
                        },
                        new
                        {
                            Id = "BİLECİK",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9350),
                            Name = "BİLECİK"
                        },
                        new
                        {
                            Id = "BİTLİS",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9360),
                            Name = "BİTLİS"
                        },
                        new
                        {
                            Id = "BOLU",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9375),
                            Name = "BOLU"
                        },
                        new
                        {
                            Id = "ÇİFTETELLİ",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9397),
                            Name = "ÇİFTETELLİ"
                        },
                        new
                        {
                            Id = "BURDUR",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9409),
                            Name = "BURDUR"
                        },
                        new
                        {
                            Id = "DİYARBAKIR",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9419),
                            Name = "DİYARBAKIR"
                        },
                        new
                        {
                            Id = "ELAZIĞ",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9433),
                            Name = "ELAZIĞ"
                        },
                        new
                        {
                            Id = "GAZİANTEP",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9444),
                            Name = "GAZİANTEP"
                        },
                        new
                        {
                            Id = "GİRESUN",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9454),
                            Name = "GİRESUN"
                        },
                        new
                        {
                            Id = "HAKKARİ",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9464),
                            Name = "HAKKARİ"
                        },
                        new
                        {
                            Id = "HALAY",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9474),
                            Name = "HALAY"
                        },
                        new
                        {
                            Id = "ROMAN",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9490),
                            Name = "ROMAN"
                        },
                        new
                        {
                            Id = "SİLİFKE",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9513),
                            Name = "SİLİFKE"
                        },
                        new
                        {
                            Id = "TEKE",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9525),
                            Name = "TEKE"
                        },
                        new
                        {
                            Id = "TRABZON",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9538),
                            Name = "TRABZON"
                        },
                        new
                        {
                            Id = "ÜSKÜP",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9549),
                            Name = "ÜSKÜP"
                        },
                        new
                        {
                            Id = "VAN",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9559),
                            Name = "VAN"
                        },
                        new
                        {
                            Id = "ZEYBEK",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 63, DateTimeKind.Local).AddTicks(9570),
                            Name = "ZEYBEK"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 64, DateTimeKind.Local).AddTicks(4041),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "us",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 64, DateTimeKind.Local).AddTicks(4087),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.SiteCommInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("GSM3")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SocialMedias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM1")
                        .IsUnique();

                    b.HasIndex("GSM2")
                        .IsUnique();

                    b.HasIndex("GSM3")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("SiteCommInfos");

                    b.HasData(
                        new
                        {
                            Id = "e49cada6-1f4b-482a-b067-f1088a2b9757",
                            Address = "İkitelli Organize Sanayi Bölgesi Giyim Sanatkarları İş ve Ticaret Merkezi (Deposite A.V.M.arkası) 4. Ada C Blok Kat:1 No:114\r\nBaşakşehir – İSTANBUL",
                            CreatedAt = new DateTime(2024, 12, 15, 2, 47, 47, 65, DateTimeKind.Local).AddTicks(3606),
                            Email = "matekostum@gmail.com",
                            GSM1 = "Kiralama WhatsApp İletişim Hattı \r\n\r\n 0530 909 11 34 – Erdem",
                            GSM2 = "İmalat \r\n\r\n 0532 321 64 97 – İsmail",
                            GSM3 = "0532 267 23 86 – Ergun",
                            Phone = "0212 549 77 34",
                            SocialMedias = "Facebook\r\nfacebook.com/mate.kostum\r\n\r\n\r\nInstagram\r\ninstagram.com/matekostum",
                            Transportation = "(Kirazlı-Metrokent hattı) İkitelli Sanayi Durağı",
                            WorkingHours = "Hafta içi: 09:00 – 17:30\r\n\r\n  Cumartesi: 09:00 – 13:00"
                        });
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GSM")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcNo")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = "87c3f7a9-e725-4f7f-8a08-faafc55d5da7",
                            Address = " uxi sokak. Lola Apt. Paksim Caddesi, No:11",
                            City = "İstanbul",
                            District = "Maltepe",
                            Email = "idilerdogan@sabanciuniv.edu",
                            GSM = "05391111111",
                            Name = "İdil",
                            Password = "qweasd",
                            SurName = "Erdoğan",
                            TcNo = "12212212211"
                        });
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUserInfo");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("BasketList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.BasketDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Basket", "Baskets")
                        .WithMany("BasketDetails")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("BasketDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baskets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId1");

                    b.HasOne("Mate.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.OrderSituation", "OrderSituations")
                        .WithMany("Orders")
                        .HasForeignKey("SituationName");

                    b.HasOne("Mate.Entities.Concrete.UserInfo", "UserInfos")
                        .WithMany("OrderList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSituations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Order", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.Product", "Products")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.ProductRegion", "ProductRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductRegionId");

                    b.HasOne("Mate.Entities.Concrete.ProductSubRegion", "ProductSubRegions")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubRegionId");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductRegions");

                    b.Navigation("ProductSubRegions");
                });

            modelBuilder.Entity("RoleUserInfo", b =>
                {
                    b.HasOne("Mate.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mate.Entities.Concrete.UserInfo", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Basket", b =>
                {
                    b.Navigation("BasketDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.OrderSituation", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.ProductSubRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mate.Entities.Concrete.UserInfo", b =>
                {
                    b.Navigation("BasketList");

                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
